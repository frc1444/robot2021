buildscript {
    ext {
        kotlinVersion = '1.5.10' // https://kotlinlang.org/releases.html
        wpiLibVersion = "2022.1.1-beta-3" // https://github.com/wpilibsuite/allwpilib/releases
        junit5Version = "5.8.2" // https://junit.org/junit5/
        gdxVersion = '1.10.0' // https://github.com/libgdx/libgdx/releases
        // https://github.com/retrodaredevil/abstract-controller-lib/blob/2.0.0-branch/gdx2/build.gradle
        gdxControllerVersion = '2.2.1' // https://github.com/libgdx/gdx-controllers/releases // eventually we'll update once abstract-controller-lib does
//        roboSimVersion = "2de59f2ec1"
        roboSimVersion = "e4be8ea42de759d26f5752e133a9c0fa31989940".substring(0, 10) // https://jitpack.io/#frc1444/robo-sim
//        abstractControllerLibVersion = "v2.5.0"
        abstractControllerLibVersion = "d72cc3b5fd"
        abstractDashboardVersion = "e635c7080d"
        jacksonVersion = "2.13.0" // https://github.com/FasterXML/jackson-databind/releases
    }
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        google()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}

subprojects {
    apply plugin: "kotlin"
    ext { // some of the variables in here may only be specific to a single module
        appName = "robot2021-sim-app"
    }
    repositories {
        mavenLocal()
        mavenCentral()
        google()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
        maven { url "https://jitpack.io" }
        maven { url "https://frcmaven.wpi.edu/artifactory/release" }
    }
    dependencies {
        api "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
        testImplementation "org.junit.jupiter:junit-jupiter-engine:$junit5Version"
        testImplementation "org.junit.jupiter:junit-jupiter-api:$junit5Version"
    }
    test {
        useJUnitPlatform()
    }
    compileKotlin {
        kotlinOptions {
            jvmTarget = "11"
        }
    }
}
project(":core"){
    apply plugin: "java-library"
}
project(":gdx"){
    apply plugin: "java-library"
    version = "1.0"
    dependencies {
        api project(":core") // if we change this to 'implementation', the desktop:dist jar produced stops working...
    }
}
project(":wpi"){
    apply plugin: "java"
    dependencies {
        api project(":core")
    }
}

project(":desktop") {
    apply plugin: "java-library"

    dependencies {
        api project(":gdx")
    }
}

wrapper {
    gradleVersion = '7.3.2' // https://gradle.org/releases/
    distributionType = Wrapper.DistributionType.ALL
}
